-- Copyright (c) 2020 Rethink Ledgers LLC. All rights reserved.

-- What Imports are generally recommended ?

import DA.Date as D 
import DA.Time as T


module Main where

type CovidTest19Key = ( Party, Int )


data Locationstate = NC | SC | GA  | FL
  deriving (Eq, Show)
data Testresult = Positive | Negative | Pending
  deriving (Eq, Show)


template Covid19Test
  with
    healthprovider : Party  -- when to use Party versus [Party]
    citizen  : Party
    statehealth : Party
    testtype : Text
    testnumber : Int
    testresult : Testresult
    testdate : Date
    locationstate : Locationstate
    testupdate : Date  -- or should this be D or D.Date ?
  where
    signatory healthprovider
    observer citizen
    observer statehealth

    agreement that describes a test initiated and updated by a healtprovider for a specific citizen

    key (healthprovider, testnumber) : CovidTest19Key
    maintainer key._1


    choice InitiateTest : ( ContractID CovidTest19)  --With this Choice and Next Choice I assume they are both linked to the same Contract
     with
      citizen : Party
      healthprovider : Party
      statehealth : Party

    controller healthprovider
      do
          let testdate = D -- Is this the right format ? 
          create CovidTest19 with healthprovider; citizen; statehealth; testtype ; testdate ;  locationstate
          
          -- Do I need to include all the fields that are defined above ?

          -- When the DAML is built in the Navigator does it now offer the items form the list for eg. locationstate ? 
          
          -- How do I limit the parties to a specific subset ? In my case I have Citizens and Healthproviders. 
          -- I like to limit for instance the healthproviders to a list of only healthproviders

        return (CovidTest19)
            -- is the return action, basically the "Save" Action
  
   choice UpdateTest : ( ContractID CovidTest19)  
   
        -- Here I want to give an opportunity to update a previous specific Contract with new information
        -- How do preserve (and display) previous information and allow for some fields to be updated ?

     with 
      citizen : Party
      healthprovider : Party
      statehealth : Party

    controller healthprovider
      do
          let testupdate = D.Date  -- This needs to be the current date
          update CovidTest19 with healthprovider; citizen; statehealth; testtype ; testupdate ; locationstate
          
        return (CovidTest19)  




data QuarantineType =  14dayMandatory | 14dayOptional | Optional
  deriving (Eq, Show)  -- what is the difference if I add Ord to this ?


Template Quarantine
  with
     quarantinetype : QuarantineType
     issuedate : D.Date
     issueparty : Party
     citizen : Party
     enddate : D.Date + 14   -- I want to add 14 days to the current date
     reason : Text
     location : Locationstate
     trackingID : Text
  where
    signatory statehealth
    observer citizen


-- The following section is intended for the Party (Citizen) to self record some information about them selves that could be useful in the rest of the application
-- Again this will need to allow for an initial creation and update function

type Citizen = ContractId CitizenDetails   

template CitizenRegistration
  with
    citizen  : Party
    citizenSSID : Text
    citizenVC : Text
    citizenfirstname : Text
    citizenlastname : Text
    citizenSSN : Text
    citizeninsuranceid : Text
    citizeninsurance : Party
    citizenlocationid : Text
  where
    signatory citizen
  
   key (citizen, citizenSSN) :  ( Party, Text )
  maintainer key._1

  choice InitiateCitizenRegistration : ( ContractID CitizenDetails )
     with
      citizen : Party

    controller citizen
      do
          create CitizenDetails with citizen, citizenSSID, citizenVC, citizenfirstname,citizenlastname, citizenSSN,
    citizeninsuranceid,citizeninsurance,citizenlocationid
          
        return (CitizenDetails)

  choice UpdateCitizenRegistration : ( ContractID CitizenDetails )
     with
      citizen : Party

    controller citizen
      do
          update CitizenDetails with citizen, citizenSSID, citizenVC, citizenfirstname,citizenlastname, citizenSSN,
    citizeninsuranceid,citizeninsurance,citizenlocationid
          
        return (CitizenDetails)



-- I want to setup the following scenarios:


-- 0. All parties get initialized
-- 1. Citizen submits Self Party Informatio
-- 2. Health Provider submits Covid19 test
-- 3. Health Provider updates Covid19 test to "Positive"
-- 4. State Agency creates Immunity Proof "Positive"
-- 5. State Agency create Quarantine Notice
-- 6. State Agency lifts Qurantine Notice
-- 7.  State Agency creates Immunity Proof "Negative"


setup = scenario do
  alice <- getParty "Alice"
  atriumhealth <- getParty "AtriumHealth"
  ncgovhealth <- getParty "NCGovHealth"
  bcbsinsurance <- getParty "BCBSInsurance"
  google <- getParty "Google-geo-location"






  CovidtestAlicePositive <- submit atriumhealth do
    create CovidTest19 with
      issuedby = atriumhealth
      issuedfor = alice
      statehealth = ncgovhealth
      testtype = "Abbott"
      testresult = "Positive"
      revokestatus = "No"
      locationstate = "NC"

      

