{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\DAML-Covid19\\\\ui-js\\\\src\\\\context\\\\UserContext.js\";\nimport React from \"react\";\nimport { createToken, dablLoginUrl } from \"../config\";\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return { ...state,\n        isAuthenticated: true,\n        token: action.token,\n        party: action.party\n      };\n\n    case \"LOGIN_FAILURE\":\n      return { ...state,\n        isAuthenticated: false\n      };\n\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state,\n        isAuthenticated: false\n      };\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}\n\nfunction UserProvider({\n  children\n}) {\n  const party = localStorage.getItem(\"daml.party\");\n  const token = localStorage.getItem(\"daml.token\");\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!token,\n    token,\n    party\n  });\n  return /*#__PURE__*/React.createElement(UserStateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserDispatchContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n\n  return context;\n} // ###########################################################\n\n\nfunction loginUser(dispatch, party, userToken, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  if (!!party) {\n    const token = userToken || createToken(party);\n    localStorage.setItem(\"daml.party\", party);\n    localStorage.setItem(\"daml.token\", token);\n    dispatch({\n      type: \"LOGIN_SUCCESS\",\n      token,\n      party\n    });\n    setError(null);\n    setIsLoading(false);\n    history.push(\"/app\");\n  } else {\n    dispatch({\n      type: \"LOGIN_FAILURE\"\n    });\n    setError(true);\n    setIsLoading(false);\n  }\n}\n\nconst loginDablUser = () => {\n  window.location.assign(`https://${dablLoginUrl}`);\n};\n\nfunction signOut(event, dispatch, history) {\n  event.preventDefault();\n  localStorage.removeItem(\"daml.party\");\n  localStorage.removeItem(\"daml.token\");\n  dispatch({\n    type: \"SIGN_OUT_SUCCESS\"\n  });\n  history.push(\"/login\");\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, loginDablUser, signOut };","map":{"version":3,"sources":["C:/Users/bartc/Documents/Github/DAML-Covid19/ui-js/src/context/UserContext.js"],"names":["React","createToken","dablLoginUrl","UserStateContext","createContext","UserDispatchContext","userReducer","state","action","type","isAuthenticated","token","party","Error","UserProvider","children","localStorage","getItem","dispatch","useReducer","useUserState","context","useContext","undefined","useUserDispatch","loginUser","userToken","history","setIsLoading","setError","setItem","push","loginDablUser","window","location","assign","signOut","event","preventDefault","removeItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { createToken, dablLoginUrl } from \"../config\";\n\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return { ...state, isAuthenticated: true, token: action.token, party: action.party };\n    case \"LOGIN_FAILURE\":\n      return { ...state, isAuthenticated: false };\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state, isAuthenticated: false };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction UserProvider({ children }) {\n  const party = localStorage.getItem(\"daml.party\")\n  const token = localStorage.getItem(\"daml.token\")\n\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!token,\n    token,\n    party\n  });\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n  return context;\n}\n\n\n// ###########################################################\n\nfunction loginUser(dispatch, party, userToken, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  if (!!party) {\n    const token = userToken || createToken(party)\n    localStorage.setItem(\"daml.party\", party);\n    localStorage.setItem(\"daml.token\", token);\n\n    dispatch({ type: \"LOGIN_SUCCESS\", token, party });\n    setError(null);\n    setIsLoading(false);\n    history.push(\"/app\");\n  } else {\n    dispatch({ type: \"LOGIN_FAILURE\" });\n    setError(true);\n    setIsLoading(false);\n  }\n}\n\nconst loginDablUser = () => {\n  window.location.assign(`https://${dablLoginUrl}`);\n}\n\nfunction signOut(event, dispatch, history) {\n  event.preventDefault();\n  localStorage.removeItem(\"daml.party\");\n  localStorage.removeItem(\"daml.token\");\n\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\n  history.push(\"/login\");\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, loginDablUser, signOut };\n"]},"metadata":{},"sourceType":"module"}