{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar types_1 = require(\"@daml/types\");\n\nvar jtv = __importStar(require(\"@mojotech/json-type-validation\"));\n\nvar cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\n\nvar events_1 = require(\"events\");\n\nvar isomorphic_ws_1 = __importDefault(require(\"isomorphic-ws\"));\n/**\n * Decoder for a [[CreateEvent]].\n */\n\n\nvar decodeCreateEvent = function (template) {\n  return jtv.object({\n    templateId: jtv.constant(template.templateId),\n    contractId: types_1.ContractId(template).decoder(),\n    signatories: types_1.List(types_1.Party).decoder(),\n    observers: types_1.List(types_1.Party).decoder(),\n    agreementText: types_1.Text.decoder(),\n    key: template.keyDecoder(),\n    payload: template.decoder()\n  });\n};\n/**\n * Decoder for a [[CreateEvent]] of unknown contract template.\n */\n\n\nvar decodeCreateEventUnknown = jtv.valueAt(['templateId'], jtv.string()).andThen(function (templateId) {\n  return decodeCreateEvent(types_1.lookupTemplate(templateId));\n});\n/**\n * Decoder for an [[ArchiveEvent]].\n */\n\nvar decodeArchiveEvent = function (template) {\n  return jtv.object({\n    templateId: jtv.constant(template.templateId),\n    contractId: types_1.ContractId(template).decoder()\n  });\n};\n/**\n * Decoder for an [[ArchiveEvent]] of unknown contract template.\n */\n\n\nvar decodeArchiveEventUnknown = jtv.valueAt(['templateId'], jtv.string()).andThen(function (templateId) {\n  return decodeArchiveEvent(types_1.lookupTemplate(templateId));\n});\n/**\n * Decoder for an [[Event]].\n */\n\nvar decodeEvent = function (template) {\n  return jtv.oneOf(jtv.object({\n    created: decodeCreateEvent(template)\n  }), jtv.object({\n    archived: decodeArchiveEvent(template)\n  }));\n};\n/**\n * Decoder for an [[Event]] with unknown contract template.\n */\n\n\nvar decodeEventUnknown = jtv.oneOf(jtv.object({\n  created: decodeCreateEventUnknown\n}), jtv.object({\n  archived: decodeArchiveEventUnknown\n}));\n/**\n * @internal\n */\n\nfunction decodeArchiveResponse(template, archiveMethod, archiveCommand) {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, _b, events;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , archiveCommand()];\n\n        case 1:\n          _a = _c.sent(), _b = _a[0], events = _a[1];\n\n          if (events.length === 1 && 'archived' in events[0] && events[0].archived.templateId === template.templateId) {\n            return [2\n            /*return*/\n            , events[0].archived];\n          } else {\n            throw Error(\"Ledger.\" + archiveMethod + \" is expected to cause one archive event for template \" + template.templateId + \"       but caused \" + JSON.stringify(events) + \".\");\n          }\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\n * @internal\n */\n\n\nfunction isRecordWith(field, x) {\n  return typeof x === 'object' && x !== null && field in x;\n}\n/**\n * @internal\n */\n\n\nvar decodeLedgerResponse = jtv.object({\n  status: jtv.number(),\n  result: jtv.unknownJson()\n});\n/**\n * @internal\n */\n\nvar decodeLedgerError = jtv.object({\n  status: jtv.number(),\n  errors: jtv.array(jtv.string())\n});\n/**\n * An object of type `Ledger` represents a handle to a DAML ledger.\n */\n\nvar Ledger =\n/** @class */\nfunction () {\n  /**\n   * Construct a new `Ledger` object. See [[LedgerOptions]] for the constructor arguments.\n   */\n  function Ledger(_a) {\n    var token = _a.token,\n        httpBaseUrl = _a.httpBaseUrl,\n        wsBaseUrl = _a.wsBaseUrl;\n\n    if (!httpBaseUrl) {\n      httpBaseUrl = window.location.protocol + \"//\" + window.location.host + \"/\";\n    }\n\n    if (!(httpBaseUrl.startsWith('http://') || httpBaseUrl.startsWith('https://'))) {\n      throw Error(\"Ledger: httpBaseUrl must start with 'http://' or 'https://'. (\" + httpBaseUrl + \")\");\n    }\n\n    if (!httpBaseUrl.endsWith('/')) {\n      throw Error(\"Ledger: httpBaseUrl must end with '/'. (\" + httpBaseUrl + \")\");\n    }\n\n    if (!wsBaseUrl) {\n      wsBaseUrl = 'ws' + httpBaseUrl.slice(4);\n    }\n\n    if (!(wsBaseUrl.startsWith('ws://') || wsBaseUrl.startsWith('wss://'))) {\n      throw Error(\"Ledger: wsBaseUrl must start with 'ws://' or 'wss://'. (\" + wsBaseUrl + \")\");\n    }\n\n    if (!wsBaseUrl.endsWith('/')) {\n      throw Error(\"Ledger: wsBaseUrl must end with '/'. (\" + wsBaseUrl + \")\");\n    }\n\n    this.token = token;\n    this.httpBaseUrl = httpBaseUrl;\n    this.wsBaseUrl = wsBaseUrl;\n  }\n  /**\n   * @internal\n   *\n   * Internal function to submit a command to the JSON API.\n   */\n\n\n  Ledger.prototype.submit = function (endpoint, payload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var httpResponse, json, ledgerResponse;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , cross_fetch_1.default(this.httpBaseUrl + endpoint, {\n              body: JSON.stringify(payload),\n              headers: {\n                'Authorization': 'Bearer ' + this.token,\n                'Content-type': 'application/json'\n              },\n              method: 'post'\n            })];\n\n          case 1:\n            httpResponse = _a.sent();\n            return [4\n            /*yield*/\n            , httpResponse.json()];\n\n          case 2:\n            json = _a.sent();\n\n            if (!httpResponse.ok) {\n              console.log(json);\n              throw jtv.Result.withException(decodeLedgerError.run(json));\n            }\n\n            ledgerResponse = jtv.Result.withException(decodeLedgerResponse.run(json));\n            return [2\n            /*return*/\n            , ledgerResponse.result];\n        }\n      });\n    });\n  };\n  /**\n   * Retrieve contracts for a given template.\n   *\n   * When no `query` argument is given, all contracts visible to the submitting party are returned.\n   * When a `query` argument is given, only those contracts matching the query are returned. See\n   * https://docs.daml.com/json-api/search-query-language.html for a description of the query\n   * language.\n   *\n   * @param template The contract template of the contracts to be matched against.\n   * @param query The contract query for the contracts to be matched against.\n   *\n   * @typeparam T The contract template type.\n   * @typeparam K The contract key type.\n   * @typeparam I The contract id type.\n   *\n   */\n\n\n  Ledger.prototype.query = function (template, query) {\n    return __awaiter(this, void 0, void 0, function () {\n      var payload, json;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            payload = {\n              templateIds: [template.templateId],\n              query: query\n            };\n            return [4\n            /*yield*/\n            , this.submit('v1/query', payload)];\n\n          case 1:\n            json = _a.sent();\n            return [2\n            /*return*/\n            , jtv.Result.withException(jtv.array(decodeCreateEvent(template)).run(json))];\n        }\n      });\n    });\n  };\n  /**\n   * Fetch a contract identified by its contract ID.\n   *\n   * @param template The template of the contract to be fetched.\n   * @param contractId The contract id of the contract to be fetched.\n   *\n   * @typeparam T The contract template type.\n   * @typeparam K The contract key type.\n   * @typeparam I The contract id type.\n   *\n   */\n\n\n  Ledger.prototype.fetch = function (template, contractId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var payload, json;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            payload = {\n              templateId: template.templateId,\n              contractId: contractId\n            };\n            return [4\n            /*yield*/\n            , this.submit('v1/fetch', payload)];\n\n          case 1:\n            json = _a.sent();\n            return [2\n            /*return*/\n            , jtv.Result.withException(jtv.oneOf(jtv.constant(null), decodeCreateEvent(template)).run(json))];\n        }\n      });\n    });\n  };\n  /**\n   * Fetch a contract identified by its contract key.\n   *\n   * Same as [[fetch]], but the contract to be fetched is identified by its contract key instead of\n   * its contract id.\n   *\n   * @param template The template of the contract to be fetched.\n   * @param key The contract key of the contract to be fetched.\n   *\n   * @typeparam T The contract template type.\n   * @typeparam K The contract key type.\n   * @typeparam I The contract id type.\n   */\n\n\n  Ledger.prototype.fetchByKey = function (template, key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var payload, json;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (key === undefined) {\n              throw Error(\"Cannot lookup by key on template \" + template.templateId + \" because it does not define a key.\");\n            }\n\n            payload = {\n              templateId: template.templateId,\n              key: key\n            };\n            return [4\n            /*yield*/\n            , this.submit('v1/fetch', payload)];\n\n          case 1:\n            json = _a.sent();\n            return [2\n            /*return*/\n            , jtv.Result.withException(jtv.oneOf(jtv.constant(null), decodeCreateEvent(template)).run(json))];\n        }\n      });\n    });\n  };\n  /**\n   * Create a contract for a given template.\n   *\n   * @param template The template of the contract to be created.\n   * @param payload The template arguments for the contract to be created.\n   *\n   * @typeparam T The contract template type.\n   * @typeparam K The contract key type.\n   * @typeparam I The contract id type.\n   *\n   */\n\n\n  Ledger.prototype.create = function (template, payload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var command, json;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            command = {\n              templateId: template.templateId,\n              payload: payload\n            };\n            return [4\n            /*yield*/\n            , this.submit('v1/create', command)];\n\n          case 1:\n            json = _a.sent();\n            return [2\n            /*return*/\n            , jtv.Result.withException(decodeCreateEvent(template).run(json))];\n        }\n      });\n    });\n  };\n  /**\n   * Exercise a choice on a contract identified by its contract ID.\n   *\n   * @param choice The choice to exercise.\n   * @param contractId The contract id of the contract to exercise.\n   * @param argument The choice arguments.\n   *\n   * @typeparam T The contract template type.\n   * @typeparam C The type of the contract choice.\n   * @typeparam R The return type of the choice.\n   *\n   * @returns The return value of the choice together with a list of [[event]]'s that where created\n   * as a result of exercising the choice.\n   */\n\n\n  Ledger.prototype.exercise = function (choice, contractId, argument) {\n    return __awaiter(this, void 0, void 0, function () {\n      var payload, json, responseDecoder, _a, exerciseResult, events;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            payload = {\n              templateId: choice.template().templateId,\n              contractId: contractId,\n              choice: choice.choiceName,\n              argument: argument\n            };\n            return [4\n            /*yield*/\n            , this.submit('v1/exercise', payload)];\n\n          case 1:\n            json = _b.sent();\n            responseDecoder = jtv.object({\n              exerciseResult: choice.resultDecoder(),\n              events: jtv.array(decodeEventUnknown)\n            });\n            _a = jtv.Result.withException(responseDecoder.run(json)), exerciseResult = _a.exerciseResult, events = _a.events;\n            return [2\n            /*return*/\n            , [exerciseResult, events]];\n        }\n      });\n    });\n  };\n  /**\n   * Exercise a choice on a contract identified by its contract key.\n   *\n   * Same as [[exercise]], but the contract is identified by its contract key instead of its\n   * contract id.\n   *\n   * @param choice The choice to exercise.\n   * @param contractId The contract id of the contract to exercise.\n   * @param argument The choice arguments.\n   *\n   * @typeparam T The contract template type.\n   * @typeparam C The type of the contract choice.\n   * @typeparam R The return type of the choice.\n   * @typeparam K The type of the contract key.\n   *\n   * @returns The return value of the choice together with a list of [[event]]'s that where created\n   * as a result of exercising the choice.\n   */\n\n\n  Ledger.prototype.exerciseByKey = function (choice, key, argument) {\n    return __awaiter(this, void 0, void 0, function () {\n      var payload, json, responseDecoder, _a, exerciseResult, events;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (key === undefined) {\n              throw Error(\"Cannot exercise by key on template \" + choice.template().templateId + \" because it does not define a key.\");\n            }\n\n            payload = {\n              templateId: choice.template().templateId,\n              key: key,\n              choice: choice.choiceName,\n              argument: argument\n            };\n            return [4\n            /*yield*/\n            , this.submit('v1/exercise', payload)];\n\n          case 1:\n            json = _b.sent();\n            responseDecoder = jtv.object({\n              exerciseResult: choice.resultDecoder(),\n              events: jtv.array(decodeEventUnknown)\n            });\n            _a = jtv.Result.withException(responseDecoder.run(json)), exerciseResult = _a.exerciseResult, events = _a.events;\n            return [2\n            /*return*/\n            , [exerciseResult, events]];\n        }\n      });\n    });\n  };\n  /**\n   * Archive a contract identified by its contract ID.\n   *\n   * @param template The template of the contract to archive.\n   * @param contractId The contract id of the contract to archive.\n   *\n   * @typeparam T The contract template type.\n   * @typeparam K The contract key type.\n   * @typeparam I The contract id type.\n   *\n   */\n\n\n  Ledger.prototype.archive = function (template, contractId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , decodeArchiveResponse(template, 'archive', function () {\n          return _this.exercise(template.Archive, contractId, {});\n        })];\n      });\n    });\n  };\n  /**\n   * Archive a contract identified by its contract key.\n   * Same as [[archive]], but the contract to be archived is identified by its contract key.\n   *\n   * @param template The template of the contract to be archived.\n   * @param key The contract key of the contract to be archived.\n   *\n   * @typeparam T The contract template type.\n   * @typeparam K The contract key type.\n   * @typeparam I The contract id type.\n   *\n   */\n\n\n  Ledger.prototype.archiveByKey = function (template, key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , decodeArchiveResponse(template, 'archiveByKey', function () {\n          return _this.exerciseByKey(template.Archive, key, {});\n        })];\n      });\n    });\n  };\n  /**\n   * @internal\n   *\n   * Internal command to submit a request to a streaming endpoint of the\n   * JSON API. Returns a stream consisting of accumulated state together with\n   * the events that produced the latest state change. The `change` function\n   * must be an operation of the monoid `Event<T, K, I>[]` on the set `State`,\n   * i.e., for all `s: State` and `x, y: Event<T, K, I>[]` we\n   * must have the structural equalities\n   * ```\n   * change(s, []) == s\n   * change(s, x.concat(y)) == change(change(s, x), y)\n   * ```\n   * Also, `change` must never change its arguments.\n   */\n\n\n  Ledger.prototype.streamSubmit = function (template, endpoint, request, init, change) {\n    var protocols = ['jwt.token.' + this.token, 'daml.ws.auth'];\n    var ws = new isomorphic_ws_1.default(this.wsBaseUrl + endpoint, protocols);\n    var isLive = false;\n    var state = init;\n    var emitter = new events_1.EventEmitter();\n    ws.addEventListener('open', function () {\n      ws.send(JSON.stringify(request));\n    });\n    ws.addEventListener('message', function (event) {\n      var json = JSON.parse(event.data.toString());\n\n      if (isRecordWith('events', json)) {\n        var events = jtv.Result.withException(jtv.array(decodeEvent(template)).run(json.events));\n\n        if (events.length > 0) {\n          state = change(state, events);\n          emitter.emit('change', state, events);\n        }\n\n        if (isRecordWith('offset', json) && !isLive) {\n          isLive = true;\n          emitter.emit('live', state);\n        }\n      } else if (isRecordWith('warnings', json)) {\n        console.warn('Ledger.streamQuery warnings', json);\n      } else if (isRecordWith('errors', json)) {\n        console.error('Ledger.streamQuery errors', json);\n      } else {\n        console.error('Ledger.streamQuery unknown message', json);\n      }\n    }); // NOTE(MH): We ignore the 'error' event since it is always followed by a\n    // 'close' event, which we need to handle anyway.\n\n    ws.addEventListener('close', function (_a) {\n      var code = _a.code,\n          reason = _a.reason;\n      emitter.emit('close', {\n        code: code,\n        reason: reason\n      });\n    }); // TODO(MH): Make types stricter.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    var on = function (type, listener) {\n      return void emitter.on(type, listener);\n    }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    var off = function (type, listener) {\n      return void emitter.on(type, listener);\n    };\n\n    var close = function () {\n      emitter.removeAllListeners();\n      ws.close();\n    };\n\n    return {\n      on: on,\n      off: off,\n      close: close\n    };\n  };\n  /**\n   * Retrieve a consolidated stream of events for a given template and query.\n   *\n   * The accumulated state is the current set of active contracts matching the query. When no\n   * `query` argument is given, all events visible to the submitting party are returned. When a\n   * `query` argument is given, only those create events matching the query are returned. See\n   * https://docs.daml.com/json-api/search-query-language.html for a description of the query\n   * language.\n   *\n   * @param template The contract template to match contracts against.\n   * @param query The query to match contracts agains.\n   *\n   * @typeparam T The contract template type.\n   * @typeparam K The contract key type.\n   * @typeparam I The contract id type.\n   */\n\n\n  Ledger.prototype.streamQuery = function (template, query) {\n    var request = {\n      templateIds: [template.templateId],\n      query: query\n    };\n\n    var change = function (contracts, events) {\n      var archiveEvents = new Set();\n      var createEvents = [];\n\n      for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n        var event_1 = events_2[_i];\n\n        if ('created' in event_1) {\n          createEvents.push(event_1.created);\n        } else {\n          // i.e. 'archived' in event\n          archiveEvents.add(event_1.archived.contractId);\n        }\n      }\n\n      return contracts.concat(createEvents).filter(function (contract) {\n        return !archiveEvents.has(contract.contractId);\n      });\n    };\n\n    return this.streamSubmit(template, 'v1/stream/query', request, [], change);\n  };\n  /**\n   * Retrieve a consolidated stream of events for a given template and contract key.\n   *\n   * Same as [[streamQuery]], but instead of a query, match contracts by contract key.\n   *\n   * @typeparam T The contract template type.\n   * @typeparam K The contract key type.\n   * @typeparam I The contract id type.\n   */\n\n\n  Ledger.prototype.streamFetchByKey = function (template, key) {\n    var request = [{\n      templateId: template.templateId,\n      key: key\n    }];\n\n    var change = function (contract, events) {\n      // NOTE(MH, #4564): We're very lenient here. We should not see a create\n      // event when `contract` is currently not null. We should also only see\n      // archive events when `contract` is currently not null and the contract\n      // ids match. However, the JSON API does not provied these guarantees yet\n      // but we're working on them.\n      for (var _i = 0, events_3 = events; _i < events_3.length; _i++) {\n        var event_2 = events_3[_i];\n\n        if ('created' in event_2) {\n          contract = event_2.created;\n        } else {\n          // i.e. 'archived' in event\n          if (contract && contract.contractId === event_2.archived.contractId) {\n            contract = null;\n          }\n        }\n      }\n\n      return contract;\n    };\n\n    return this.streamSubmit(template, 'v1/stream/fetch', request, null, change);\n  };\n\n  return Ledger;\n}();\n\nexports.default = Ledger;","map":{"version":3,"sources":["C:/Users/bartc/Documents/Github/DAML-Covid19/ui-js/node_modules/@daml/ledger/index.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__importStar","mod","__esModule","k","Object","hasOwnProperty","__importDefault","defineProperty","exports","types_1","require","jtv","cross_fetch_1","events_1","isomorphic_ws_1","decodeCreateEvent","template","object","templateId","constant","contractId","ContractId","decoder","signatories","List","Party","observers","agreementText","Text","key","keyDecoder","payload","decodeCreateEventUnknown","valueAt","string","andThen","lookupTemplate","decodeArchiveEvent","decodeArchiveEventUnknown","decodeEvent","oneOf","created","archived","decodeEventUnknown","decodeArchiveResponse","archiveMethod","archiveCommand","_a","_b","events","_c","Error","JSON","stringify","isRecordWith","field","x","decodeLedgerResponse","status","number","unknownJson","decodeLedgerError","errors","array","Ledger","token","httpBaseUrl","wsBaseUrl","window","location","protocol","host","startsWith","endsWith","slice","prototype","submit","endpoint","httpResponse","json","ledgerResponse","default","headers","method","ok","console","log","Result","withException","run","query","templateIds","fetch","fetchByKey","undefined","create","command","exercise","choice","argument","responseDecoder","exerciseResult","choiceName","resultDecoder","exerciseByKey","archive","_this","Archive","archiveByKey","streamSubmit","request","init","change","protocols","ws","isLive","state","emitter","EventEmitter","addEventListener","send","event","parse","data","toString","emit","warn","error","code","reason","on","type","listener","off","close","removeAllListeners","streamQuery","contracts","archiveEvents","Set","createEvents","_i","events_2","event_1","add","concat","filter","contract","has","streamFetchByKey","events_3","event_2"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar types_1 = require(\"@daml/types\");\nvar jtv = __importStar(require(\"@mojotech/json-type-validation\"));\nvar cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nvar events_1 = require(\"events\");\nvar isomorphic_ws_1 = __importDefault(require(\"isomorphic-ws\"));\n/**\n * Decoder for a [[CreateEvent]].\n */\nvar decodeCreateEvent = function (template) { return jtv.object({\n    templateId: jtv.constant(template.templateId),\n    contractId: types_1.ContractId(template).decoder(),\n    signatories: types_1.List(types_1.Party).decoder(),\n    observers: types_1.List(types_1.Party).decoder(),\n    agreementText: types_1.Text.decoder(),\n    key: template.keyDecoder(),\n    payload: template.decoder(),\n}); };\n/**\n * Decoder for a [[CreateEvent]] of unknown contract template.\n */\nvar decodeCreateEventUnknown = jtv.valueAt(['templateId'], jtv.string()).andThen(function (templateId) {\n    return decodeCreateEvent(types_1.lookupTemplate(templateId));\n});\n/**\n * Decoder for an [[ArchiveEvent]].\n */\nvar decodeArchiveEvent = function (template) { return jtv.object({\n    templateId: jtv.constant(template.templateId),\n    contractId: types_1.ContractId(template).decoder(),\n}); };\n/**\n * Decoder for an [[ArchiveEvent]] of unknown contract template.\n */\nvar decodeArchiveEventUnknown = jtv.valueAt(['templateId'], jtv.string()).andThen(function (templateId) {\n    return decodeArchiveEvent(types_1.lookupTemplate(templateId));\n});\n/**\n * Decoder for an [[Event]].\n */\nvar decodeEvent = function (template) { return jtv.oneOf(jtv.object({ created: decodeCreateEvent(template) }), jtv.object({ archived: decodeArchiveEvent(template) })); };\n/**\n * Decoder for an [[Event]] with unknown contract template.\n */\nvar decodeEventUnknown = jtv.oneOf(jtv.object({ created: decodeCreateEventUnknown }), jtv.object({ archived: decodeArchiveEventUnknown }));\n/**\n * @internal\n */\nfunction decodeArchiveResponse(template, archiveMethod, archiveCommand) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, _b, events;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0: return [4 /*yield*/, archiveCommand()];\n                case 1:\n                    _a = _c.sent(), _b = _a[0], events = _a[1];\n                    if (events.length === 1 && 'archived' in events[0] && events[0].archived.templateId === template.templateId) {\n                        return [2 /*return*/, events[0].archived];\n                    }\n                    else {\n                        throw Error(\"Ledger.\" + archiveMethod + \" is expected to cause one archive event for template \" + template.templateId + \"       but caused \" + JSON.stringify(events) + \".\");\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * @internal\n */\nfunction isRecordWith(field, x) {\n    return typeof x === 'object' && x !== null && field in x;\n}\n/**\n * @internal\n */\nvar decodeLedgerResponse = jtv.object({\n    status: jtv.number(),\n    result: jtv.unknownJson(),\n});\n/**\n * @internal\n */\nvar decodeLedgerError = jtv.object({\n    status: jtv.number(),\n    errors: jtv.array(jtv.string()),\n});\n/**\n * An object of type `Ledger` represents a handle to a DAML ledger.\n */\nvar Ledger = /** @class */ (function () {\n    /**\n     * Construct a new `Ledger` object. See [[LedgerOptions]] for the constructor arguments.\n     */\n    function Ledger(_a) {\n        var token = _a.token, httpBaseUrl = _a.httpBaseUrl, wsBaseUrl = _a.wsBaseUrl;\n        if (!httpBaseUrl) {\n            httpBaseUrl = window.location.protocol + \"//\" + window.location.host + \"/\";\n        }\n        if (!(httpBaseUrl.startsWith('http://') || httpBaseUrl.startsWith('https://'))) {\n            throw Error(\"Ledger: httpBaseUrl must start with 'http://' or 'https://'. (\" + httpBaseUrl + \")\");\n        }\n        if (!httpBaseUrl.endsWith('/')) {\n            throw Error(\"Ledger: httpBaseUrl must end with '/'. (\" + httpBaseUrl + \")\");\n        }\n        if (!wsBaseUrl) {\n            wsBaseUrl = 'ws' + httpBaseUrl.slice(4);\n        }\n        if (!(wsBaseUrl.startsWith('ws://') || wsBaseUrl.startsWith('wss://'))) {\n            throw Error(\"Ledger: wsBaseUrl must start with 'ws://' or 'wss://'. (\" + wsBaseUrl + \")\");\n        }\n        if (!wsBaseUrl.endsWith('/')) {\n            throw Error(\"Ledger: wsBaseUrl must end with '/'. (\" + wsBaseUrl + \")\");\n        }\n        this.token = token;\n        this.httpBaseUrl = httpBaseUrl;\n        this.wsBaseUrl = wsBaseUrl;\n    }\n    /**\n     * @internal\n     *\n     * Internal function to submit a command to the JSON API.\n     */\n    Ledger.prototype.submit = function (endpoint, payload) {\n        return __awaiter(this, void 0, void 0, function () {\n            var httpResponse, json, ledgerResponse;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, cross_fetch_1.default(this.httpBaseUrl + endpoint, {\n                            body: JSON.stringify(payload),\n                            headers: {\n                                'Authorization': 'Bearer ' + this.token,\n                                'Content-type': 'application/json'\n                            },\n                            method: 'post',\n                        })];\n                    case 1:\n                        httpResponse = _a.sent();\n                        return [4 /*yield*/, httpResponse.json()];\n                    case 2:\n                        json = _a.sent();\n                        if (!httpResponse.ok) {\n                            console.log(json);\n                            throw jtv.Result.withException(decodeLedgerError.run(json));\n                        }\n                        ledgerResponse = jtv.Result.withException(decodeLedgerResponse.run(json));\n                        return [2 /*return*/, ledgerResponse.result];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieve contracts for a given template.\n     *\n     * When no `query` argument is given, all contracts visible to the submitting party are returned.\n     * When a `query` argument is given, only those contracts matching the query are returned. See\n     * https://docs.daml.com/json-api/search-query-language.html for a description of the query\n     * language.\n     *\n     * @param template The contract template of the contracts to be matched against.\n     * @param query The contract query for the contracts to be matched against.\n     *\n     * @typeparam T The contract template type.\n     * @typeparam K The contract key type.\n     * @typeparam I The contract id type.\n     *\n     */\n    Ledger.prototype.query = function (template, query) {\n        return __awaiter(this, void 0, void 0, function () {\n            var payload, json;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        payload = { templateIds: [template.templateId], query: query };\n                        return [4 /*yield*/, this.submit('v1/query', payload)];\n                    case 1:\n                        json = _a.sent();\n                        return [2 /*return*/, jtv.Result.withException(jtv.array(decodeCreateEvent(template)).run(json))];\n                }\n            });\n        });\n    };\n    /**\n     * Fetch a contract identified by its contract ID.\n     *\n     * @param template The template of the contract to be fetched.\n     * @param contractId The contract id of the contract to be fetched.\n     *\n     * @typeparam T The contract template type.\n     * @typeparam K The contract key type.\n     * @typeparam I The contract id type.\n     *\n     */\n    Ledger.prototype.fetch = function (template, contractId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var payload, json;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        payload = {\n                            templateId: template.templateId,\n                            contractId: contractId,\n                        };\n                        return [4 /*yield*/, this.submit('v1/fetch', payload)];\n                    case 1:\n                        json = _a.sent();\n                        return [2 /*return*/, jtv.Result.withException(jtv.oneOf(jtv.constant(null), decodeCreateEvent(template)).run(json))];\n                }\n            });\n        });\n    };\n    /**\n     * Fetch a contract identified by its contract key.\n     *\n     * Same as [[fetch]], but the contract to be fetched is identified by its contract key instead of\n     * its contract id.\n     *\n     * @param template The template of the contract to be fetched.\n     * @param key The contract key of the contract to be fetched.\n     *\n     * @typeparam T The contract template type.\n     * @typeparam K The contract key type.\n     * @typeparam I The contract id type.\n     */\n    Ledger.prototype.fetchByKey = function (template, key) {\n        return __awaiter(this, void 0, void 0, function () {\n            var payload, json;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (key === undefined) {\n                            throw Error(\"Cannot lookup by key on template \" + template.templateId + \" because it does not define a key.\");\n                        }\n                        payload = {\n                            templateId: template.templateId,\n                            key: key,\n                        };\n                        return [4 /*yield*/, this.submit('v1/fetch', payload)];\n                    case 1:\n                        json = _a.sent();\n                        return [2 /*return*/, jtv.Result.withException(jtv.oneOf(jtv.constant(null), decodeCreateEvent(template)).run(json))];\n                }\n            });\n        });\n    };\n    /**\n     * Create a contract for a given template.\n     *\n     * @param template The template of the contract to be created.\n     * @param payload The template arguments for the contract to be created.\n     *\n     * @typeparam T The contract template type.\n     * @typeparam K The contract key type.\n     * @typeparam I The contract id type.\n     *\n     */\n    Ledger.prototype.create = function (template, payload) {\n        return __awaiter(this, void 0, void 0, function () {\n            var command, json;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        command = {\n                            templateId: template.templateId,\n                            payload: payload,\n                        };\n                        return [4 /*yield*/, this.submit('v1/create', command)];\n                    case 1:\n                        json = _a.sent();\n                        return [2 /*return*/, jtv.Result.withException(decodeCreateEvent(template).run(json))];\n                }\n            });\n        });\n    };\n    /**\n     * Exercise a choice on a contract identified by its contract ID.\n     *\n     * @param choice The choice to exercise.\n     * @param contractId The contract id of the contract to exercise.\n     * @param argument The choice arguments.\n     *\n     * @typeparam T The contract template type.\n     * @typeparam C The type of the contract choice.\n     * @typeparam R The return type of the choice.\n     *\n     * @returns The return value of the choice together with a list of [[event]]'s that where created\n     * as a result of exercising the choice.\n     */\n    Ledger.prototype.exercise = function (choice, contractId, argument) {\n        return __awaiter(this, void 0, void 0, function () {\n            var payload, json, responseDecoder, _a, exerciseResult, events;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        payload = {\n                            templateId: choice.template().templateId,\n                            contractId: contractId,\n                            choice: choice.choiceName,\n                            argument: argument,\n                        };\n                        return [4 /*yield*/, this.submit('v1/exercise', payload)];\n                    case 1:\n                        json = _b.sent();\n                        responseDecoder = jtv.object({\n                            exerciseResult: choice.resultDecoder(),\n                            events: jtv.array(decodeEventUnknown),\n                        });\n                        _a = jtv.Result.withException(responseDecoder.run(json)), exerciseResult = _a.exerciseResult, events = _a.events;\n                        return [2 /*return*/, [exerciseResult, events]];\n                }\n            });\n        });\n    };\n    /**\n     * Exercise a choice on a contract identified by its contract key.\n     *\n     * Same as [[exercise]], but the contract is identified by its contract key instead of its\n     * contract id.\n     *\n     * @param choice The choice to exercise.\n     * @param contractId The contract id of the contract to exercise.\n     * @param argument The choice arguments.\n     *\n     * @typeparam T The contract template type.\n     * @typeparam C The type of the contract choice.\n     * @typeparam R The return type of the choice.\n     * @typeparam K The type of the contract key.\n     *\n     * @returns The return value of the choice together with a list of [[event]]'s that where created\n     * as a result of exercising the choice.\n     */\n    Ledger.prototype.exerciseByKey = function (choice, key, argument) {\n        return __awaiter(this, void 0, void 0, function () {\n            var payload, json, responseDecoder, _a, exerciseResult, events;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (key === undefined) {\n                            throw Error(\"Cannot exercise by key on template \" + choice.template().templateId + \" because it does not define a key.\");\n                        }\n                        payload = {\n                            templateId: choice.template().templateId,\n                            key: key,\n                            choice: choice.choiceName,\n                            argument: argument,\n                        };\n                        return [4 /*yield*/, this.submit('v1/exercise', payload)];\n                    case 1:\n                        json = _b.sent();\n                        responseDecoder = jtv.object({\n                            exerciseResult: choice.resultDecoder(),\n                            events: jtv.array(decodeEventUnknown),\n                        });\n                        _a = jtv.Result.withException(responseDecoder.run(json)), exerciseResult = _a.exerciseResult, events = _a.events;\n                        return [2 /*return*/, [exerciseResult, events]];\n                }\n            });\n        });\n    };\n    /**\n     * Archive a contract identified by its contract ID.\n     *\n     * @param template The template of the contract to archive.\n     * @param contractId The contract id of the contract to archive.\n     *\n     * @typeparam T The contract template type.\n     * @typeparam K The contract key type.\n     * @typeparam I The contract id type.\n     *\n     */\n    Ledger.prototype.archive = function (template, contractId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, decodeArchiveResponse(template, 'archive', function () { return _this.exercise(template.Archive, contractId, {}); })];\n            });\n        });\n    };\n    /**\n     * Archive a contract identified by its contract key.\n     * Same as [[archive]], but the contract to be archived is identified by its contract key.\n     *\n     * @param template The template of the contract to be archived.\n     * @param key The contract key of the contract to be archived.\n     *\n     * @typeparam T The contract template type.\n     * @typeparam K The contract key type.\n     * @typeparam I The contract id type.\n     *\n     */\n    Ledger.prototype.archiveByKey = function (template, key) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, decodeArchiveResponse(template, 'archiveByKey', function () { return _this.exerciseByKey(template.Archive, key, {}); })];\n            });\n        });\n    };\n    /**\n     * @internal\n     *\n     * Internal command to submit a request to a streaming endpoint of the\n     * JSON API. Returns a stream consisting of accumulated state together with\n     * the events that produced the latest state change. The `change` function\n     * must be an operation of the monoid `Event<T, K, I>[]` on the set `State`,\n     * i.e., for all `s: State` and `x, y: Event<T, K, I>[]` we\n     * must have the structural equalities\n     * ```\n     * change(s, []) == s\n     * change(s, x.concat(y)) == change(change(s, x), y)\n     * ```\n     * Also, `change` must never change its arguments.\n     */\n    Ledger.prototype.streamSubmit = function (template, endpoint, request, init, change) {\n        var protocols = ['jwt.token.' + this.token, 'daml.ws.auth'];\n        var ws = new isomorphic_ws_1.default(this.wsBaseUrl + endpoint, protocols);\n        var isLive = false;\n        var state = init;\n        var emitter = new events_1.EventEmitter();\n        ws.addEventListener('open', function () {\n            ws.send(JSON.stringify(request));\n        });\n        ws.addEventListener('message', function (event) {\n            var json = JSON.parse(event.data.toString());\n            if (isRecordWith('events', json)) {\n                var events = jtv.Result.withException(jtv.array(decodeEvent(template)).run(json.events));\n                if (events.length > 0) {\n                    state = change(state, events);\n                    emitter.emit('change', state, events);\n                }\n                if (isRecordWith('offset', json) && !isLive) {\n                    isLive = true;\n                    emitter.emit('live', state);\n                }\n            }\n            else if (isRecordWith('warnings', json)) {\n                console.warn('Ledger.streamQuery warnings', json);\n            }\n            else if (isRecordWith('errors', json)) {\n                console.error('Ledger.streamQuery errors', json);\n            }\n            else {\n                console.error('Ledger.streamQuery unknown message', json);\n            }\n        });\n        // NOTE(MH): We ignore the 'error' event since it is always followed by a\n        // 'close' event, which we need to handle anyway.\n        ws.addEventListener('close', function (_a) {\n            var code = _a.code, reason = _a.reason;\n            emitter.emit('close', { code: code, reason: reason });\n        });\n        // TODO(MH): Make types stricter.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var on = function (type, listener) { return void emitter.on(type, listener); };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var off = function (type, listener) { return void emitter.on(type, listener); };\n        var close = function () {\n            emitter.removeAllListeners();\n            ws.close();\n        };\n        return { on: on, off: off, close: close };\n    };\n    /**\n     * Retrieve a consolidated stream of events for a given template and query.\n     *\n     * The accumulated state is the current set of active contracts matching the query. When no\n     * `query` argument is given, all events visible to the submitting party are returned. When a\n     * `query` argument is given, only those create events matching the query are returned. See\n     * https://docs.daml.com/json-api/search-query-language.html for a description of the query\n     * language.\n     *\n     * @param template The contract template to match contracts against.\n     * @param query The query to match contracts agains.\n     *\n     * @typeparam T The contract template type.\n     * @typeparam K The contract key type.\n     * @typeparam I The contract id type.\n     */\n    Ledger.prototype.streamQuery = function (template, query) {\n        var request = { templateIds: [template.templateId], query: query };\n        var change = function (contracts, events) {\n            var archiveEvents = new Set();\n            var createEvents = [];\n            for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n                var event_1 = events_2[_i];\n                if ('created' in event_1) {\n                    createEvents.push(event_1.created);\n                }\n                else { // i.e. 'archived' in event\n                    archiveEvents.add(event_1.archived.contractId);\n                }\n            }\n            return contracts\n                .concat(createEvents)\n                .filter(function (contract) { return !archiveEvents.has(contract.contractId); });\n        };\n        return this.streamSubmit(template, 'v1/stream/query', request, [], change);\n    };\n    /**\n     * Retrieve a consolidated stream of events for a given template and contract key.\n     *\n     * Same as [[streamQuery]], but instead of a query, match contracts by contract key.\n     *\n     * @typeparam T The contract template type.\n     * @typeparam K The contract key type.\n     * @typeparam I The contract id type.\n     */\n    Ledger.prototype.streamFetchByKey = function (template, key) {\n        var request = [{ templateId: template.templateId, key: key }];\n        var change = function (contract, events) {\n            // NOTE(MH, #4564): We're very lenient here. We should not see a create\n            // event when `contract` is currently not null. We should also only see\n            // archive events when `contract` is currently not null and the contract\n            // ids match. However, the JSON API does not provied these guarantees yet\n            // but we're working on them.\n            for (var _i = 0, events_3 = events; _i < events_3.length; _i++) {\n                var event_2 = events_3[_i];\n                if ('created' in event_2) {\n                    contract = event_2.created;\n                }\n                else { // i.e. 'archived' in event\n                    if (contract && contract.contractId === event_2.archived.contractId) {\n                        contract = null;\n                    }\n                }\n            }\n            return contract;\n        };\n        return this.streamSubmit(template, 'v1/stream/fetch', request, null, change);\n    };\n    return Ledger;\n}());\nexports.default = Ledger;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}