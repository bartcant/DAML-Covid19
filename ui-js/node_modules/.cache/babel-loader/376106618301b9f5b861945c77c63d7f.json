{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\DAML-Covid19\\\\ui-js\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\DAML-Covid19\\\\ui-js\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\DAML-Covid19\\\\ui-js\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import ReactJson from\"react-json-view\";import{Grid,Table,TableHead,TableRow,TableCell,TableBody,TextField,Button}from\"@material-ui/core\";import{useStyles}from\"./styles\";export default function Contracts(_ref){var contracts=_ref.contracts,columns=_ref.columns,_ref$actions=_ref.actions,actions=_ref$actions===void 0?[]:_ref$actions;actions=actions?actions:[];var isDefault=!columns;columns=columns?columns:[[\"TemplateId\",\"templateId\"],[\"ContractId\",\"contractId\"]];var classes=useStyles();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var handleChange=function handleChange(name){return function(event){setState(_objectSpread({},state,_defineProperty({},name,event.target.value)));};};function getByPath(data,path){if(path.length===0)return data;if(data[path[0]]===undefined)throw new Error(\"Object doesn't have key '\"+path[0]+\"': \"+JSON.stringify(data));var value=getByPath(data[path[0]],path.slice(1));return value;}function getValue(data,path){var split=typeof path===\"string\"&&path!==\"\"?path.split(\".\"):[];return getByPath(data,split);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:4},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Table,{size:\"small\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,{className:classes.tableRow},columns.map(function(col){return/*#__PURE__*/React.createElement(TableCell,{className:classes.tableCell,key:col[0]},col[0]);}),isDefault?/*#__PURE__*/React.createElement(TableCell,{className:classes.tableCell,key:\"payload\"},\"Payload\"):/*#__PURE__*/React.createElement(React.Fragment,null),actions.map(function(action){return/*#__PURE__*/React.createElement(TableCell,{className:classes.tableCell,key:action[0]},action[0]);}))),/*#__PURE__*/React.createElement(TableBody,null,contracts.map(function(c,i){return/*#__PURE__*/React.createElement(TableRow,{key:i,className:classes.tableRow},columns.map(function(col){return/*#__PURE__*/React.createElement(TableCell,{key:col[0],className:classes.tableCell},getValue(c,col[1]));}),isDefault?/*#__PURE__*/React.createElement(TableCell,{key:\"payload\",className:classes.tableCell},/*#__PURE__*/React.createElement(ReactJson,{src:c.payload,name:false,collapsed:true,enableClipboard:false})):/*#__PURE__*/React.createElement(React.Fragment,null),actions.map(function(action){return/*#__PURE__*/React.createElement(TableCell,{key:action[0],className:classes.tableCell},action.length>2?/*#__PURE__*/React.createElement(TextField,{InputProps:{classes:{underline:classes.textFieldUnderline,input:classes.textField}},onChange:handleChange(action[2]),onKeyDown:function onKeyDown(e){if(e.key===\"Enter\"){action[1](c,state[action[2]]);e.target.value=\"\";}},placeholder:action[2]}):/*#__PURE__*/React.createElement(React.Fragment,null),/*#__PURE__*/React.createElement(Button,{color:\"primary\",size:\"small\",className:\"px-2\",variant:\"contained\",onClick:function onClick(){return action[1](c,state[action[2]]);}},action[0]));}));}))))));}","map":{"version":3,"sources":["C:/Users/bartc/Documents/Github/DAML-Covid19/ui-js/src/components/Contracts/Contracts.js"],"names":["React","useState","ReactJson","Grid","Table","TableHead","TableRow","TableCell","TableBody","TextField","Button","useStyles","Contracts","contracts","columns","actions","isDefault","classes","state","setState","handleChange","name","event","target","value","getByPath","data","path","length","undefined","Error","JSON","stringify","slice","getValue","split","tableRow","map","col","tableCell","action","c","i","payload","underline","textFieldUnderline","input","textField","e","key"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactJson from \"react-json-view\";\nimport { Grid, Table, TableHead, TableRow, TableCell, TableBody, TextField, Button } from \"@material-ui/core\";\nimport { useStyles } from \"./styles\";\n\nexport default function Contracts({ contracts, columns, actions=[] }) {\n\n  actions = actions ? actions : [];\n  const isDefault = !columns;\n  columns = columns ? columns : [ [ \"TemplateId\", \"templateId\" ], [ \"ContractId\", \"contractId\" ] ];\n\n  const classes = useStyles();\n  var [state, setState] = useState({});\n  const handleChange = name => (event => { setState({ ...state, [name]: event.target.value }); });\n\n  function getByPath(data, path) {\n    if (path.length === 0) return data;\n    if (data[path[0]] === undefined) throw new Error(\"Object doesn't have key '\" + path[0] + \"': \" + JSON.stringify(data));\n    const value = getByPath(data[path[0]], path.slice(1));\n    return value;\n  }\n\n  function getValue(data, path) {\n    const split = typeof path === \"string\" && path !== \"\" ? path.split(\".\") : [];\n    return getByPath(data, split);\n  }\n\n  return (\n    <>\n      <Grid container spacing={4}>\n      <Grid item xs={12}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow className={classes.tableRow}>\n              { columns.map(col =>    (<TableCell className={classes.tableCell} key={col[0]}>{col[0]}</TableCell>)) }\n              { isDefault ?           (<TableCell className={classes.tableCell} key=\"payload\">Payload</TableCell>) : <></>}\n              { actions.map(action => (<TableCell className={classes.tableCell} key={action[0]}>{action[0]}</TableCell>)) }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {contracts.map((c, i) => (\n              <TableRow key={i} className={classes.tableRow}>\n                { columns.map(col => (<TableCell key={col[0]} className={classes.tableCell}>{getValue(c, col[1])}</TableCell>)) }\n                { isDefault\n                    ? (<TableCell key=\"payload\" className={classes.tableCell}>\n                        <ReactJson src={c.payload} name={false} collapsed={true} enableClipboard={false}/>\n                      </TableCell>)\n                    : <></> }\n                { actions.map(action => (\n                  <TableCell key={action[0]} className={classes.tableCell}>\n                      { action.length > 2\n                        ? <TextField\n                            InputProps={{ classes: { underline: classes.textFieldUnderline, input: classes.textField } }}\n                            onChange={handleChange(action[2])}\n                            onKeyDown={e => {\n                              if (e.key === \"Enter\") {\n                                action[1](c, state[action[2]]);\n                                e.target.value = \"\";\n                              }\n                            }}\n                            placeholder={action[2]}\n                          />\n                        : <></> }\n                      <Button\n                        color=\"primary\"\n                        size=\"small\"\n                        className=\"px-2\"\n                        variant=\"contained\"\n                        onClick={() => action[1](c, state[action[2]])}\n                      >\n                        {action[0]}\n                      </Button>\n                    </TableCell>)\n                )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}