{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar jtv = require(\"@mojotech/json-type-validation\");\n/**\n * @internal\n */\n\n\nvar registeredTemplates = {};\n/**\n * @internal\n */\n\nexports.registerTemplate = function (template) {\n  var templateId = template.templateId;\n  var oldTemplate = registeredTemplates[templateId];\n\n  if (oldTemplate === undefined) {\n    registeredTemplates[templateId] = template;\n    console.debug(\"Registered template \" + templateId + \".\");\n  } else {\n    console.warn(\"Trying to re-register template \" + templateId + \".\");\n  }\n};\n/**\n * @internal\n */\n\n\nexports.lookupTemplate = function (templateId) {\n  var template = registeredTemplates[templateId];\n\n  if (template === undefined) {\n    throw Error(\"Trying to look up template \" + templateId + \".\");\n  }\n\n  return template;\n};\n/**\n * Companion obect of the [[Unit]] type.\n */\n\n\nexports.Unit = {\n  decoder: function () {\n    return jtv.object({});\n  }\n};\n/**\n * Companion object of the [[Bool]] type.\n */\n\nexports.Bool = {\n  decoder: jtv.boolean\n};\n/**\n * Companion object of the [[Int]] type.\n */\n\nexports.Int = {\n  decoder: jtv.string\n};\n/**\n * Companion function of the [[Numeric]] type.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexports.Numeric = function (_) {\n  return {\n    decoder: jtv.string\n  };\n};\n/**\n * Companion object of the [[Decimal]] type.\n */\n\n\nexports.Decimal = exports.Numeric(10);\n/**\n * Companion object of the [[Text]] type.\n */\n\nexports.Text = {\n  decoder: jtv.string\n};\n/**\n * Companion object of the [[Time]] type.\n */\n\nexports.Time = {\n  decoder: jtv.string\n};\n/**\n * Companion object of the [[Party]] type.\n */\n\nexports.Party = {\n  decoder: jtv.string\n};\n/**\n * Companion object of the [[List]] type.\n */\n\nexports.List = function (t) {\n  return {\n    decoder: function () {\n      return jtv.array(t.decoder());\n    }\n  };\n};\n/**\n * Companion object of the [[Date]] type.\n */\n\n\nexports.Date = {\n  decoder: jtv.string\n};\n/**\n * Used to `brand` [[ContractId]].\n */\n\nvar ContractIdBrand = Symbol();\n/**\n * Companion object of the [[ContractId]] type.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexports.ContractId = function (_t) {\n  return {\n    decoder: jtv.string\n  };\n};\n/**\n * This class does the actual work behind the [[Optional]] companion function.  In addition to\n * implementing the [[Serializable]] interface it also stores the [[Serializable]] instance of the\n * payload of the [[Optional]] and uses it to provide a decoder for the [[OptionalInner]] type.\n *\n * @typeparam T The type of the optionally present value.\n */\n\n\nvar OptionalWorker =\n/** @class */\nfunction () {\n  function OptionalWorker(payload) {\n    this.payload = payload;\n  }\n\n  OptionalWorker.prototype.decoder = function () {\n    return jtv.oneOf(jtv.constant(null), this.innerDecoder());\n  };\n\n  OptionalWorker.prototype.innerDecoder = function () {\n    if (this.payload instanceof OptionalWorker) {\n      var payloadInnerDecoder = this.payload.innerDecoder();\n      return jtv.oneOf(jtv.constant([]), jtv.tuple([payloadInnerDecoder]));\n    } else {\n      // NOTE(MH): `T` is not of the form `Optional<U>` here and hence `null`\n      // does not extend `T`. Thus, `OptionalInner<T> = T`.\n      return this.payload.decoder();\n    }\n  };\n\n  return OptionalWorker;\n}();\n/**\n * Companion function of the [[Optional]] type.\n */\n\n\nexports.Optional = function (t) {\n  return new OptionalWorker(t);\n};\n/**\n * Companion object of the [[TextMap]] type.\n */\n\n\nexports.TextMap = function (t) {\n  return {\n    decoder: function () {\n      return jtv.dict(t.decoder());\n    }\n  };\n}; // TODO(MH): `Map` type.","map":{"version":3,"sources":["C:/Users/bartc/Documents/Github/DAML-Covid19/ui-js/node_modules/@daml2js/covid-19-0.0.1/node_modules/@daml/types/index.js"],"names":["Object","defineProperty","exports","value","jtv","require","registeredTemplates","registerTemplate","template","templateId","oldTemplate","undefined","console","debug","warn","lookupTemplate","Error","Unit","decoder","object","Bool","boolean","Int","string","Numeric","_","Decimal","Text","Time","Party","List","t","array","Date","ContractIdBrand","Symbol","ContractId","_t","OptionalWorker","payload","prototype","oneOf","constant","innerDecoder","payloadInnerDecoder","tuple","Optional","TextMap","dict"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar jtv = require(\"@mojotech/json-type-validation\");\n/**\n * @internal\n */\nvar registeredTemplates = {};\n/**\n * @internal\n */\nexports.registerTemplate = function (template) {\n    var templateId = template.templateId;\n    var oldTemplate = registeredTemplates[templateId];\n    if (oldTemplate === undefined) {\n        registeredTemplates[templateId] = template;\n        console.debug(\"Registered template \" + templateId + \".\");\n    }\n    else {\n        console.warn(\"Trying to re-register template \" + templateId + \".\");\n    }\n};\n/**\n * @internal\n */\nexports.lookupTemplate = function (templateId) {\n    var template = registeredTemplates[templateId];\n    if (template === undefined) {\n        throw Error(\"Trying to look up template \" + templateId + \".\");\n    }\n    return template;\n};\n/**\n * Companion obect of the [[Unit]] type.\n */\nexports.Unit = {\n    decoder: function () { return jtv.object({}); },\n};\n/**\n * Companion object of the [[Bool]] type.\n */\nexports.Bool = {\n    decoder: jtv.boolean,\n};\n/**\n * Companion object of the [[Int]] type.\n */\nexports.Int = {\n    decoder: jtv.string,\n};\n/**\n * Companion function of the [[Numeric]] type.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexports.Numeric = function (_) {\n    return ({\n        decoder: jtv.string,\n    });\n};\n/**\n * Companion object of the [[Decimal]] type.\n */\nexports.Decimal = exports.Numeric(10);\n/**\n * Companion object of the [[Text]] type.\n */\nexports.Text = {\n    decoder: jtv.string,\n};\n/**\n * Companion object of the [[Time]] type.\n */\nexports.Time = {\n    decoder: jtv.string,\n};\n/**\n * Companion object of the [[Party]] type.\n */\nexports.Party = {\n    decoder: jtv.string,\n};\n/**\n * Companion object of the [[List]] type.\n */\nexports.List = function (t) { return ({\n    decoder: function () { return jtv.array(t.decoder()); },\n}); };\n/**\n * Companion object of the [[Date]] type.\n */\nexports.Date = {\n    decoder: jtv.string,\n};\n/**\n * Used to `brand` [[ContractId]].\n */\nvar ContractIdBrand = Symbol();\n/**\n * Companion object of the [[ContractId]] type.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexports.ContractId = function (_t) { return ({\n    decoder: jtv.string,\n}); };\n/**\n * This class does the actual work behind the [[Optional]] companion function.  In addition to\n * implementing the [[Serializable]] interface it also stores the [[Serializable]] instance of the\n * payload of the [[Optional]] and uses it to provide a decoder for the [[OptionalInner]] type.\n *\n * @typeparam T The type of the optionally present value.\n */\nvar OptionalWorker = /** @class */ (function () {\n    function OptionalWorker(payload) {\n        this.payload = payload;\n    }\n    OptionalWorker.prototype.decoder = function () {\n        return jtv.oneOf(jtv.constant(null), this.innerDecoder());\n    };\n    OptionalWorker.prototype.innerDecoder = function () {\n        if (this.payload instanceof OptionalWorker) {\n            var payloadInnerDecoder = this.payload.innerDecoder();\n            return jtv.oneOf(jtv.constant([]), jtv.tuple([payloadInnerDecoder]));\n        }\n        else {\n            // NOTE(MH): `T` is not of the form `Optional<U>` here and hence `null`\n            // does not extend `T`. Thus, `OptionalInner<T> = T`.\n            return this.payload.decoder();\n        }\n    };\n    return OptionalWorker;\n}());\n/**\n * Companion function of the [[Optional]] type.\n */\nexports.Optional = function (t) {\n    return new OptionalWorker(t);\n};\n/**\n * Companion object of the [[TextMap]] type.\n */\nexports.TextMap = function (t) { return ({\n    decoder: function () { return jtv.dict(t.decoder()); },\n}); };\n// TODO(MH): `Map` type.\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}