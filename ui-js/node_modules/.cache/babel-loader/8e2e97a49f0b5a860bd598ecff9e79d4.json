{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\DAML-Covid19\\\\ui-js\\\\src\\\\components\\\\Sidebar\\\\components\\\\SidebarLink\\\\SidebarLink.js\";\nimport React from \"react\";\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport useStyles from \"./styles\";\nexport default function SidebarLink({\n  path,\n  icon,\n  label,\n  location,\n  isSidebarOpened\n}) {\n  const classes = useStyles();\n  const isLinkActive = path && (location.pathname === path || location.pathname.indexOf(path) !== -1);\n  return /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    component: path && Link,\n    to: path,\n    className: classes.link,\n    classes: {\n      root: classnames(classes.linkRoot, {\n        [classes.linkActive]: isLinkActive\n      })\n    },\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: classnames(classes.linkIcon, {\n      [classes.linkIconActive]: isLinkActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, icon), /*#__PURE__*/React.createElement(ListItemText, {\n    classes: {\n      primary: classnames(classes.linkText, {\n        [classes.linkTextActive]: isLinkActive,\n        [classes.linkTextHidden]: !isSidebarOpened\n      })\n    },\n    primary: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })); // ###########################################################\n}","map":{"version":3,"sources":["C:/Users/bartc/Documents/Github/DAML-Covid19/ui-js/src/components/Sidebar/components/SidebarLink/SidebarLink.js"],"names":["React","ListItem","ListItemIcon","ListItemText","Link","classnames","useStyles","SidebarLink","path","icon","label","location","isSidebarOpened","classes","isLinkActive","pathname","indexOf","link","root","linkRoot","linkActive","linkIcon","linkIconActive","primary","linkText","linkTextActive","linkTextHidden"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,mBAArD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAEA,eAAe,SAASC,WAAT,CAAqB;AAClCC,EAAAA,IADkC;AAElCC,EAAAA,IAFkC;AAGlCC,EAAAA,KAHkC;AAIlCC,EAAAA,QAJkC;AAKlCC,EAAAA;AALkC,CAArB,EAMZ;AACD,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAMQ,YAAY,GAAGN,IAAI,KAAKG,QAAQ,CAACI,QAAT,KAAsBP,IAAtB,IAA8BG,QAAQ,CAACI,QAAT,CAAkBC,OAAlB,CAA0BR,IAA1B,MAAoC,CAAC,CAAxE,CAAzB;AAEA,sBACE,oBAAC,QAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,SAAS,EAAEA,IAAI,IAAIJ,IAFrB;AAGE,IAAA,EAAE,EAAEI,IAHN;AAIE,IAAA,SAAS,EAAEK,OAAO,CAACI,IAJrB;AAKE,IAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEb,UAAU,CAACQ,OAAO,CAACM,QAAT,EAAmB;AACjC,SAACN,OAAO,CAACO,UAAT,GAAsBN;AADW,OAAnB;AADT,KALX;AAUE,IAAA,aAAa,MAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAYE,oBAAC,YAAD;AACE,IAAA,SAAS,EAAET,UAAU,CAACQ,OAAO,CAACQ,QAAT,EAAmB;AACtC,OAACR,OAAO,CAACS,cAAT,GAA0BR;AADY,KAAnB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGL,IALH,CAZF,eAmBE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE;AACPc,MAAAA,OAAO,EAAElB,UAAU,CAACQ,OAAO,CAACW,QAAT,EAAmB;AACpC,SAACX,OAAO,CAACY,cAAT,GAA0BX,YADU;AAEpC,SAACD,OAAO,CAACa,cAAT,GAA0B,CAACd;AAFS,OAAnB;AADZ,KADX;AAOE,IAAA,OAAO,EAAEF,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF,CAJC,CAoCD;AACD","sourcesContent":["import React from \"react\";\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport useStyles from \"./styles\";\n\nexport default function SidebarLink({\n  path,\n  icon,\n  label,\n  location,\n  isSidebarOpened\n}) {\n  const classes = useStyles();\n  const isLinkActive = path && (location.pathname === path || location.pathname.indexOf(path) !== -1);\n\n  return (\n    <ListItem\n      button\n      component={path && Link}\n      to={path}\n      className={classes.link}\n      classes={{\n        root: classnames(classes.linkRoot, {\n          [classes.linkActive]: isLinkActive,\n        }),\n      }}\n      disableRipple\n    >\n      <ListItemIcon\n        className={classnames(classes.linkIcon, {\n          [classes.linkIconActive]: isLinkActive,\n        })}\n      >\n        {icon}\n      </ListItemIcon>\n      <ListItemText\n        classes={{\n          primary: classnames(classes.linkText, {\n            [classes.linkTextActive]: isLinkActive,\n            [classes.linkTextHidden]: !isSidebarOpened,\n          }),\n        }}\n        primary={label}\n      />\n    </ListItem>\n  );\n\n  // ###########################################################\n}\n"]},"metadata":{},"sourceType":"module"}