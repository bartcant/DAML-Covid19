{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\DAML-Covid19\\\\ui-js\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\DAML-Covid19\\\\ui-js\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React from\"react\";import{createToken,dablLoginUrl}from\"../config\";var UserStateContext=React.createContext();var UserDispatchContext=React.createContext();function userReducer(state,action){switch(action.type){case\"LOGIN_SUCCESS\":return _objectSpread({},state,{isAuthenticated:true,token:action.token,party:action.party});case\"LOGIN_FAILURE\":return _objectSpread({},state,{isAuthenticated:false});case\"SIGN_OUT_SUCCESS\":return _objectSpread({},state,{isAuthenticated:false});default:{throw new Error(\"Unhandled action type: \".concat(action.type));}}}function UserProvider(_ref){var children=_ref.children;var party=localStorage.getItem(\"daml.party\");var token=localStorage.getItem(\"daml.token\");var _React$useReducer=React.useReducer(userReducer,{isAuthenticated:!!token,token:token,party:party}),_React$useReducer2=_slicedToArray(_React$useReducer,2),state=_React$useReducer2[0],dispatch=_React$useReducer2[1];return/*#__PURE__*/React.createElement(UserStateContext.Provider,{value:state},/*#__PURE__*/React.createElement(UserDispatchContext.Provider,{value:dispatch},children));}function useUserState(){var context=React.useContext(UserStateContext);if(context===undefined){throw new Error(\"useUserState must be used within a UserProvider\");}return context;}function useUserDispatch(){var context=React.useContext(UserDispatchContext);if(context===undefined){throw new Error(\"useUserDispatch must be used within a UserProvider\");}return context;}// ###########################################################\nfunction loginUser(dispatch,party,userToken,history,setIsLoading,setError){setError(false);setIsLoading(true);if(!!party){var token=userToken||createToken(party);localStorage.setItem(\"daml.party\",party);localStorage.setItem(\"daml.token\",token);dispatch({type:\"LOGIN_SUCCESS\",token:token,party:party});setError(null);setIsLoading(false);history.push(\"/app\");}else{dispatch({type:\"LOGIN_FAILURE\"});setError(true);setIsLoading(false);}}var loginDablUser=function loginDablUser(){window.location.assign(\"https://\".concat(dablLoginUrl));};function signOut(event,dispatch,history){event.preventDefault();localStorage.removeItem(\"daml.party\");localStorage.removeItem(\"daml.token\");dispatch({type:\"SIGN_OUT_SUCCESS\"});history.push(\"/login\");}export{UserProvider,useUserState,useUserDispatch,loginUser,loginDablUser,signOut};","map":{"version":3,"sources":["C:/Users/bartc/Documents/Github/DAML-Covid19/ui-js/src/context/UserContext.js"],"names":["React","createToken","dablLoginUrl","UserStateContext","createContext","UserDispatchContext","userReducer","state","action","type","isAuthenticated","token","party","Error","UserProvider","children","localStorage","getItem","useReducer","dispatch","useUserState","context","useContext","undefined","useUserDispatch","loginUser","userToken","history","setIsLoading","setError","setItem","push","loginDablUser","window","location","assign","signOut","event","preventDefault","removeItem"],"mappings":"uWAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,YAAtB,KAA0C,WAA1C,CAEA,GAAIC,CAAAA,gBAAgB,CAAGH,KAAK,CAACI,aAAN,EAAvB,CACA,GAAIC,CAAAA,mBAAmB,CAAGL,KAAK,CAACI,aAAN,EAA1B,CAEA,QAASE,CAAAA,WAAT,CAAqBC,KAArB,CAA4BC,MAA5B,CAAoC,CAClC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,eAAL,CACE,wBAAYF,KAAZ,EAAmBG,eAAe,CAAE,IAApC,CAA0CC,KAAK,CAAEH,MAAM,CAACG,KAAxD,CAA+DC,KAAK,CAAEJ,MAAM,CAACI,KAA7E,GACF,IAAK,eAAL,CACE,wBAAYL,KAAZ,EAAmBG,eAAe,CAAE,KAApC,GACF,IAAK,kBAAL,CACE,wBAAYH,KAAZ,EAAmBG,eAAe,CAAE,KAApC,GACF,QAAS,CACP,KAAM,IAAIG,CAAAA,KAAJ,kCAAoCL,MAAM,CAACC,IAA3C,EAAN,CACD,CATH,CAWD,CAED,QAASK,CAAAA,YAAT,MAAoC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CAClC,GAAMH,CAAAA,KAAK,CAAGI,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd,CACA,GAAMN,CAAAA,KAAK,CAAGK,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd,CAFkC,sBAIVjB,KAAK,CAACkB,UAAN,CAAiBZ,WAAjB,CAA8B,CACpDI,eAAe,CAAE,CAAC,CAACC,KADiC,CAEpDA,KAAK,CAALA,KAFoD,CAGpDC,KAAK,CAALA,KAHoD,CAA9B,CAJU,wDAI7BL,KAJ6B,uBAItBY,QAJsB,uBAUlC,mBACE,oBAAC,gBAAD,CAAkB,QAAlB,EAA2B,KAAK,CAAEZ,KAAlC,eACE,oBAAC,mBAAD,CAAqB,QAArB,EAA8B,KAAK,CAAEY,QAArC,EACGJ,QADH,CADF,CADF,CAOD,CAED,QAASK,CAAAA,YAAT,EAAwB,CACtB,GAAIC,CAAAA,OAAO,CAAGrB,KAAK,CAACsB,UAAN,CAAiBnB,gBAAjB,CAAd,CACA,GAAIkB,OAAO,GAAKE,SAAhB,CAA2B,CACzB,KAAM,IAAIV,CAAAA,KAAJ,CAAU,iDAAV,CAAN,CACD,CACD,MAAOQ,CAAAA,OAAP,CACD,CAED,QAASG,CAAAA,eAAT,EAA2B,CACzB,GAAIH,CAAAA,OAAO,CAAGrB,KAAK,CAACsB,UAAN,CAAiBjB,mBAAjB,CAAd,CACA,GAAIgB,OAAO,GAAKE,SAAhB,CAA2B,CACzB,KAAM,IAAIV,CAAAA,KAAJ,CAAU,oDAAV,CAAN,CACD,CACD,MAAOQ,CAAAA,OAAP,CACD,CAGD;AAEA,QAASI,CAAAA,SAAT,CAAmBN,QAAnB,CAA6BP,KAA7B,CAAoCc,SAApC,CAA+CC,OAA/C,CAAwDC,YAAxD,CAAsEC,QAAtE,CAAgF,CAC9EA,QAAQ,CAAC,KAAD,CAAR,CACAD,YAAY,CAAC,IAAD,CAAZ,CAEA,GAAI,CAAC,CAAChB,KAAN,CAAa,CACX,GAAMD,CAAAA,KAAK,CAAGe,SAAS,EAAIzB,WAAW,CAACW,KAAD,CAAtC,CACAI,YAAY,CAACc,OAAb,CAAqB,YAArB,CAAmClB,KAAnC,EACAI,YAAY,CAACc,OAAb,CAAqB,YAArB,CAAmCnB,KAAnC,EAEAQ,QAAQ,CAAC,CAAEV,IAAI,CAAE,eAAR,CAAyBE,KAAK,CAALA,KAAzB,CAAgCC,KAAK,CAALA,KAAhC,CAAD,CAAR,CACAiB,QAAQ,CAAC,IAAD,CAAR,CACAD,YAAY,CAAC,KAAD,CAAZ,CACAD,OAAO,CAACI,IAAR,CAAa,MAAb,EACD,CATD,IASO,CACLZ,QAAQ,CAAC,CAAEV,IAAI,CAAE,eAAR,CAAD,CAAR,CACAoB,QAAQ,CAAC,IAAD,CAAR,CACAD,YAAY,CAAC,KAAD,CAAZ,CACD,CACF,CAED,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,mBAAkCjC,YAAlC,GACD,CAFD,CAIA,QAASkC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwBlB,QAAxB,CAAkCQ,OAAlC,CAA2C,CACzCU,KAAK,CAACC,cAAN,GACAtB,YAAY,CAACuB,UAAb,CAAwB,YAAxB,EACAvB,YAAY,CAACuB,UAAb,CAAwB,YAAxB,EAEApB,QAAQ,CAAC,CAAEV,IAAI,CAAE,kBAAR,CAAD,CAAR,CACAkB,OAAO,CAACI,IAAR,CAAa,QAAb,EACD,CAED,OAASjB,YAAT,CAAuBM,YAAvB,CAAqCI,eAArC,CAAsDC,SAAtD,CAAiEO,aAAjE,CAAgFI,OAAhF","sourcesContent":["import React from \"react\";\nimport { createToken, dablLoginUrl } from \"../config\";\n\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return { ...state, isAuthenticated: true, token: action.token, party: action.party };\n    case \"LOGIN_FAILURE\":\n      return { ...state, isAuthenticated: false };\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state, isAuthenticated: false };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction UserProvider({ children }) {\n  const party = localStorage.getItem(\"daml.party\")\n  const token = localStorage.getItem(\"daml.token\")\n\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!token,\n    token,\n    party\n  });\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n  return context;\n}\n\n\n// ###########################################################\n\nfunction loginUser(dispatch, party, userToken, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  if (!!party) {\n    const token = userToken || createToken(party)\n    localStorage.setItem(\"daml.party\", party);\n    localStorage.setItem(\"daml.token\", token);\n\n    dispatch({ type: \"LOGIN_SUCCESS\", token, party });\n    setError(null);\n    setIsLoading(false);\n    history.push(\"/app\");\n  } else {\n    dispatch({ type: \"LOGIN_FAILURE\" });\n    setError(true);\n    setIsLoading(false);\n  }\n}\n\nconst loginDablUser = () => {\n  window.location.assign(`https://${dablLoginUrl}`);\n}\n\nfunction signOut(event, dispatch, history) {\n  event.preventDefault();\n  localStorage.removeItem(\"daml.party\");\n  localStorage.removeItem(\"daml.token\");\n\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\n  history.push(\"/login\");\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, loginDablUser, signOut };\n"]},"metadata":{},"sourceType":"module"}